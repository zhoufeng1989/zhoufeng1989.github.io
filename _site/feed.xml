<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">__init__(self)</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2014-02-26T09:28:27+00:00</updated>
<id>/</id>
<author>
  <name>zhoufeng</name>
  <uri>/</uri>
  <email>fengzhou1024@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Apache 日志过滤(filter)及转储(rotate)]]></title>
  <link rel="alternate" type="text/html" href="/Apache-log/"/>
  <id>/Apache-log</id>
  <published>2014-02-25T00:00:00+00:00</published>
  <updated>2014-02-25T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;今天，线上的apache出现了问题，查看日志，出现大片错误&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;child pid 10727 &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;signal File size limit exceeded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;25&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
piped log program &lt;span class=&quot;s1&quot;&gt;&amp;#39;/usr/local/sbin/cronolog /path/to/access.log.%Y%m%d&amp;#39;&lt;/span&gt; failed unexpectedly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;去网上一查，是因为日志文件超过了2G，导致cronolog程序继续写入日志失败，有人建议用logrotate代替cronolog
切分日志，但是logrotate只支持cron模式运行，不能像cronolog一样通过管道来切分日志。  &lt;br /&gt;
为什么日志会这么多呢？看了一下大量请求返回的都是404，这部分请求前些时间做了防盗链处理，更改了资源请求的url，但是盗链应用仍从旧链接访问，cdn请求不到资源便访问我们的apache，所以才有了这些请求。。好吧，那就不记录这些请求的日志，具体做法:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#设置一个条件&lt;/span&gt;
SetEnvIf Request_URI &lt;span class=&quot;s2&quot;&gt;&amp;quot;pattern&amp;quot;&lt;/span&gt; dontlog
&lt;span class=&quot;c&quot;&gt;#当请求不满足dontlog条件时，才记录日志&lt;/span&gt;
CustomLog &lt;span class=&quot;s2&quot;&gt;&amp;quot;|/usr/local/sbin/cronolog /path/to/access.log.%Y%m%d&amp;quot;&lt;/span&gt; log_fmt_name &lt;span class=&quot;nv&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;!dontlog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最后让apache重新加载配置文件&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;apachectl  graceful
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;graceful and restart&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;apachectl graceful: Gracefully restarts the Apache daemon by sending it a &lt;strong&gt;SIGUSR1&lt;/strong&gt;. If the daemon is not running, it is started.  &lt;br /&gt;
This differs from a normal restart in that &lt;strong&gt;currently open connections are not aborted&lt;/strong&gt;.  &lt;br /&gt;
A side effect is that old log files will not be closed immediately. This means that if used in a
log rotation script, a substantial delay may be necessary to ensure that the old log files are closed before processing them.  &lt;br /&gt;
This command automatically checks the configuration files via configtest before initiating the restart to make sure Apache doesn’t die.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;apachectl restart: Restarts the Apache daemon by sending it a &lt;strong&gt;SIGHUP&lt;/strong&gt;.If the
daemon is not running, it is started.   &lt;br /&gt;
This command automatically checks the configuration files via configtest before initiating the restart to make sure Apache doesn’t die.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;再看下日志，清净了很多。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;总结一下&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;apache log rotate 主要有三种工具: rotatelogs/cronolog/logrotate，前两者可以用管道的方式转储，最后一种只支持外部cron方式定时运行。   &lt;br /&gt;
当日志过大，超过2G时，如果用cronolog转储日志，要么缩小切分日志的时间间隔，要么改用logrotate。还有一种方法，直接 hack cronolog 的代码：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cronolog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#将open改为open64，返回的文件标志符的文件大小用off64_t类型，从而支持大于2G的位移, 相当于open加上O_LARGEFILE 的 flag&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;log_fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfilename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O_WRONLY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O_CREAT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O_APPEND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FILE_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;/Apache-log/&quot;&gt;Apache 日志过滤(filter)及转储(rotate)&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on February 25, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Ps 命令和进程状态]]></title>
  <link rel="alternate" type="text/html" href="/Ps-command-and-process-status/"/>
  <id>/Ps-command-and-process-status</id>
  <published>2014-02-14T00:00:00+00:00</published>
  <updated>2014-02-14T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;strong&gt;ps&lt;/strong&gt;显示当前的进程信息，即process snapshot。&lt;/p&gt;

&lt;p&gt;ps 接受一下几种选项：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;UNIX 选项, 前面有横线（-,dash）；&lt;/li&gt;
  &lt;li&gt;BSD 选项, 前面没有横线；&lt;/li&gt;
  &lt;li&gt;GNU 长选项，前面有两条横线。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不同类型的选项可以混用，但是不保证不产生冲突。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不加任何选项时的默认行为：&lt;/strong&gt;    &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;selects all processes with the same effective user ID (euid=EUID) as the current user 
and associated with the same terminal as the invoker.&lt;br /&gt;
It displays the process ID (pid=PID), the terminal associated with
the process (tname=TTY), the cumulated CPU time in [dd-]hh:mm:ss format
(time=TIME), and the executable name (ucmd=CMD). &lt;br /&gt;
Output is unsorted by default.   &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;常用选项&lt;/strong&gt;：     &lt;/p&gt;

&lt;p&gt;UNIX选项：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-e 所以进程，等价于 -A&lt;/li&gt;
  &lt;li&gt;-f full-format, -F extra full-format&lt;/li&gt;
  &lt;li&gt;-l long-format&lt;/li&gt;
  &lt;li&gt;-H 以层次显示进程&lt;/li&gt;
  &lt;li&gt;-L 显示线程信息&lt;/li&gt;
  &lt;li&gt;-o 定制显示列&lt;/li&gt;
  &lt;li&gt;-u userlist 根据进程的real user name 或 ID 筛选进程，进程的real user 是指进程创建者&lt;/li&gt;
  &lt;li&gt;-U userlist 根据进程的effective user ID（EUID）或name来筛选进程，进程的effective user 是指进程的文件访问权限所来自的用户&lt;/li&gt;
  &lt;li&gt;-C commandname，根据进程名显示进程&lt;/li&gt;
  &lt;li&gt;-p pid，根据pid显示进程&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;BSD选项：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a 显示拥有终端（tty）的所有进程，当和x连用时，显示所有进程&lt;/li&gt;
  &lt;li&gt;u user-oriendted format   &lt;/li&gt;
  &lt;li&gt;f 以层次显示进程&lt;/li&gt;
  &lt;li&gt;m 显示线程信息&lt;/li&gt;
  &lt;li&gt;o 定制显示列&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;一些例子&lt;/strong&gt;：    &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;显示所有进程
ps axu 
ps -ef
显示httpd进程树
ps -C httpd -Hf
显示自定义列
ps -eopid,tt,user,fname,tmout,f,wchan
显示pid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;42的进程名，comm后面的等号表示不显示列名（COMMAND）
ps -p 42 -o &lt;span class=&quot;nv&quot;&gt;comm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;进程状态&lt;/strong&gt;：STAT列    &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;D 不可中断的睡眠状态，一般是在进行磁盘IO，进程正处于系统调用中，不响应任何异步信号，不可被中断，只有当进程从系统调用返回时，才会响应信号进行信号处理，如果进程较长时间处于该状态，可能是硬件出了问题。&lt;/li&gt;
  &lt;li&gt;R 正在执行或可被执行，进程控制块（task_struct）被放入了CPU的可执行队列上&lt;/li&gt;
  &lt;li&gt;S 可中断的睡眠状态，处于该状态的进程在等待某事件的发生（如socket连接，信号量等），进程控制块被放入相应事件的的等待队列中，当事件发生时，队列中的一个或多个进程会被唤醒&lt;/li&gt;
  &lt;li&gt;T 暂停状态或被跟踪状态，进程接受了sigstop信号，便进入了这个状态，进程暂停执行，当又接收sigcont信号时，进程恢复执行；当用gdb进行调试时，进程进入被跟踪状态，与此类似，当调试进程退出，进程才恢复执行&lt;/li&gt;
  &lt;li&gt;X 退出状态，进程即将被销毁（should never be seen）&lt;/li&gt;
  &lt;li&gt;Z Defunct， 进程成为僵尸进程，已经结束了进程，但是没有从进程表中删除，如果进程太多会导致进程表条目过多，导致系统崩溃，除进程表条目，不占用其他内存空间&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了上述进程状态外，ps还提供了一些其他信息：  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&amp;lt; 进程有较高优先级&lt;/li&gt;
  &lt;li&gt;N 进程有较低优先级&lt;/li&gt;
  &lt;li&gt;L has pages locked into memory (for real-time and custom IO)&lt;/li&gt;
  &lt;li&gt;s 进程是session leader&lt;/li&gt;
  &lt;li&gt;l 多线程进程&lt;/li&gt;
  &lt;li&gt;+ 进程在前台进程组（foreground process group）&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;/Ps-command-and-process-status/&quot;&gt;Ps 命令和进程状态&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on February 14, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[MySQL type convert when compare string and integer]]></title>
  <link rel="alternate" type="text/html" href="/MySQL-type-convert/"/>
  <id>/MySQL-type-convert</id>
  <published>2013-12-18T00:00:00+00:00</published>
  <updated>2013-12-18T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;以下在MySQL5.0版本适用，其他版本没有验证。&lt;/p&gt;

&lt;p&gt;当在SQL中比较字符串和整数的时候，会将两方都转换为float进行比较，会产生意想不到的结果:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;CBA123&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;CBA123&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-----------------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warning&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;等号两边都被转换成0.0&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;CBA123&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;CBA123&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-------------------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;字符串之间的比较不需要类型转换&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;123CBA&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;123CBA&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;              &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warning&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;字符串 ‘123CBA’被转换成123.0
看一下警告信息:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+------+--------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Level&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;                                    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+------+--------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Warning&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1292&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Truncated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;incorrect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOUBLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;123CBA&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;---------+------+--------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;所以在以字符串类型列为筛选条件的时候，还是不要和整数进行比较了。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/MySQL-type-convert/&quot;&gt;MySQL type convert when compare string and integer&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on December 18, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Mysql tools]]></title>
  <link rel="alternate" type="text/html" href="/Mysql-tools/"/>
  <id>/Mysql-tools</id>
  <published>2013-11-02T00:00:00+00:00</published>
  <updated>2013-11-02T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;总结了常用的MySQL工具:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mysqldump&lt;/strong&gt;:备份数据库表&lt;/p&gt;

&lt;p&gt;mysqldump常用的一些选项:
–databases
–tables
–where #dump满足条件的数据
-d –no-data #只dump表结构，不包括数据&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mysql&lt;/strong&gt;:与MySQL交互的命令行工具&lt;/p&gt;

&lt;p&gt;mysql常用的一些选项
-e 执行sql
–skip-column-names 去掉列名，只有数据，用于在管道中直接处理数据。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mysqlbinlog&lt;/strong&gt;: 解析MySQL二进制log&lt;/p&gt;

&lt;p&gt;mysqlbinlog –database=db_name \
–start-date=”yyyy-mm-dd HH:MM:SS” \ 
–stop-date=”yyyy-mm-dd HH:MM:SS” \
/path/to/mysql-bin.log &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mysqldumpslow&lt;/strong&gt;:分析慢日志 &lt;/p&gt;

&lt;p&gt;首先得配置my.cnf：
log_slow_queries = /path/slow.log # 定义log位置，注意要有写入的权限&lt;/p&gt;

&lt;p&gt;具体的使法如下：&lt;/p&gt;

&lt;p&gt;mysqldumpslow -s c -t 40 /path/slow.log
出来的结果是访问次数最多的40个sql，几个参数大概意思如下：
-t 显示多少条
-s 排序，默认是at。c是次数，t是时间，l是lock时间，r是返回结果。如果是ac，at，al，ar则是升序
-g 可以用正则匹配部分语句&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mysqlsla&lt;/strong&gt;: 分析日志
-lt 日志类型，如slow,binary
–sort META，按照META来排序,如c_sum(sql次数),t_sum(总时间，只有slow log支持),t_avg(平均每条sql的执行时间,只有slow log支持)
–top n,只打印排名前n的数据
具体见&lt;a href=&quot;http://hackmysql.com/mysqlsla&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;切分慢日志&lt;/strong&gt;
/bin/mv mysql_slow_log dest_log 
mysqladmin -uusername -ppass flush-logs
flush-logs会自动切分binary log ，reopen error log and slow log&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/Mysql-tools/&quot;&gt;Mysql tools&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on November 02, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[传输文件命令scp与rsync]]></title>
  <link rel="alternate" type="text/html" href="/transfer-file-through-network/"/>
  <id>/transfer-file-through-network</id>
  <published>2013-10-08T00:00:00+00:00</published>
  <updated>2013-10-08T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;strong&gt;scp&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#将远程文件传至本地&lt;/span&gt;
scp -P port user@host:/path/to/src_file /path/to/dest_file

scp 常用选项：  
-r recursively copy a directory
-P port
-p Preserves modification &lt;span class=&quot;nb&quot;&gt;times&lt;/span&gt;, access &lt;span class=&quot;nb&quot;&gt;times&lt;/span&gt;, and modes from the original file.
-v verbose 
-l limit used bandwidth,specified in kbit/s. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;rsync&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当传输大量文件时，更好的做法是用rsync，rsync只传输不同的部分，传输较快&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;rsync -avzu --progress --bwlimt&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;100 -e &lt;span class=&quot;s1&quot;&gt;&amp;#39;ssh -l username -p port&amp;#39;&lt;/span&gt; ip:path/to/src_files /path/to/dest_file

-a 归档模式，保留文件的原有属性（如权限、组、所有人等），且递归传输
-v verbose，显示详细信息
-z 传输时进行压缩
-u 如果目的文件比原文件更新，则跳过
--progress 显示传输进度
--bwlimit&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;KBPS 传输限速，KBytes per second
-e&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;--rsh&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;COMMAND&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  选择远程shell，例子中是ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;/transfer-file-through-network/&quot;&gt;传输文件命令scp与rsync&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on October 08, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Grep Summary]]></title>
  <link rel="alternate" type="text/html" href="/Grep-summary/"/>
  <id>/Grep-summary</id>
  <published>2013-09-03T00:00:00+00:00</published>
  <updated>2013-09-03T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;基本用法是:  &lt;br /&gt;
&lt;strong&gt;grep [options] PATTERN [FILES]&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;options&lt;/strong&gt;&lt;br /&gt;
常用的&lt;em&gt;options&lt;/em&gt;有:  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-i  匹配时不区别大小写   &lt;/li&gt;
  &lt;li&gt;-v  不匹配模式&lt;/li&gt;
  &lt;li&gt;-n  显示行数&lt;/li&gt;
  &lt;li&gt;-r  递归查找&lt;/li&gt;
  &lt;li&gt;-l  只显示匹配的字符串所在的文件名,对于查看哪个文件有匹配模式的字符串时有用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上下文相关:    &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;-A n after, 显示匹配行以及后面的n行&lt;/li&gt;
  &lt;li&gt;-B n before, 显示匹配行以及之前的n行&lt;/li&gt;
  &lt;li&gt;-C n 显示匹配行以及前后n行，等价于 -A n -B n&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;PATTERN&lt;/strong&gt; &lt;br /&gt;
&lt;em&gt;PATTERN&lt;/em&gt;是指定的正则表达式,为了避免正则表达式被shell展开(如 &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;等),比较好的做法是给正则表达式加上引号。  如:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;grep &lt;span class=&quot;s1&quot;&gt;&amp;#39;*cat*&amp;#39;&lt;/span&gt; a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;grep的正则表达式属于POSIX规范的&lt;a href=&quot;http://www.regular-expressions.info/posix.html&quot;&gt;BRE&lt;/a&gt;流派,字符组(&lt;code&gt;[]&lt;/code&gt;)、锚点(&lt;code&gt;^&lt;/code&gt;(匹配行首)、&lt;code&gt;$&lt;/code&gt;(匹配行尾)、&lt;code&gt;\&amp;lt;&lt;/code&gt;、&lt;code&gt;\&amp;gt;&lt;/code&gt;(匹配单词的起始和结束位置))都无需转义，但是量词中，除了&lt;code&gt;*&lt;/code&gt;以外, 其他量词(&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;{n, m}&lt;/code&gt;)都需要转义才能使用。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# 匹配文件a.txt中含有单个数字的行，使用POSIX字符组   &lt;/span&gt;
grep &lt;span class=&quot;s1&quot;&gt;&amp;#39;[[:digit:]]&amp;#39;&lt;/span&gt; a.txt
&lt;span class=&quot;c&quot;&gt;# 匹配文件a.txt中能够匹配单词hello的行&lt;/span&gt;
grep &lt;span class=&quot;s1&quot;&gt;&amp;#39;\&amp;lt;hello\&amp;gt;&amp;#39;&lt;/span&gt; a.txt
&lt;span class=&quot;c&quot;&gt;# 匹配文件a.txt中含有多个连续字母a的行&lt;/span&gt;
grep &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;a&lt;span class=&quot;se&quot;&gt;\{&lt;/span&gt;2,&lt;span class=&quot;se&quot;&gt;\}&lt;/span&gt; a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;grep支持多选结构，但是必须转义&lt;code&gt;(&lt;/code&gt;、&lt;code&gt;|&lt;/code&gt;、&lt;code&gt;)&lt;/code&gt;,捕获分组的记法是 &lt;code&gt;\1&lt;/code&gt;,&lt;code&gt;\2&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如何匹配tab字符&lt;/strong&gt; &lt;br /&gt;
&lt;em&gt;POSIX regular expression&lt;/em&gt;没有将&lt;em&gt;tab&lt;/em&gt;映射为&lt;em&gt;\t&lt;/em&gt;,&lt;em&gt;grep&lt;/em&gt;中如何搜索&lt;em&gt;tab&lt;/em&gt;呢?   &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用&lt;em&gt;perl&lt;/em&gt;风格的正则表达式    &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    grep -P &lt;span class=&quot;s1&quot;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; a.txt
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;使用&lt;code&gt;echo&lt;/code&gt;直接输出的tab     &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    grep &lt;span class=&quot;s2&quot;&gt;&amp;quot;$(echo -ne \\t)&amp;quot;&lt;/span&gt; a.txt
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;CTRL+V tab: CTRL+V 使接下来的输入的字符失去特殊意义&lt;/li&gt;
  &lt;li&gt;如果用的是&lt;em&gt;Bash shell&lt;/em&gt;, 还可以用&lt;a href=&quot;http://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html#ANSI_002dC-Quoting&quot;&gt;ansi c quoting&lt;/a&gt;这个特性&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    grep &lt;span class=&quot;s1&quot;&gt;$&amp;#39;\t&amp;#39;&lt;/span&gt; a.txt
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;/Grep-summary/&quot;&gt;Grep Summary&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on September 03, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[elasticsearch 相关笔记]]></title>
  <link rel="alternate" type="text/html" href="/Elasticsearch-note/"/>
  <id>/Elasticsearch-note</id>
  <published>2013-08-13T00:00:00+00:00</published>
  <updated>2013-08-13T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;这段时间看了下elasticsearch，做了一些零散的笔记：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;添加logstash加模板&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt; curl -XPUT http://host:port/_template/template-logstash -d &lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    &amp;quot;template&amp;quot; : &amp;quot;logstash-*&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    &amp;quot;settings&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      &amp;quot;index.number_of_shards&amp;quot; : 5,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      &amp;quot;index&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        &amp;quot;store&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;          &amp;quot;compress&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;            &amp;quot;stored&amp;quot; : true,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;            &amp;quot;tv&amp;quot;: true&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;          }                                                                                                                                                                                                                       &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        }  &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      }  &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    }, &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    &amp;quot;mappings&amp;quot; : {  &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      &amp;quot;fluentd&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        &amp;quot;_source&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;          &amp;quot;compress&amp;quot; : true&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        }, &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        &amp;quot;_all&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;          &amp;quot;enabled&amp;quot; : false&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        }, &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        &amp;quot;properties&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;          &amp;quot;@fields&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;            &amp;quot;dynamic&amp;quot; : &amp;quot;true&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;            &amp;quot;properties&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;              &amp;quot;type&amp;quot; : {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                &amp;quot;type&amp;quot; : &amp;quot;string&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                &amp;quot;index&amp;quot; : &amp;quot;not_analyzed&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;              },&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;              &amp;quot;result&amp;quot;: {&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;                &amp;quot;index&amp;quot;: &amp;quot;not_analyzed&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;               }   &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;            }  &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;          }  &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;        }  &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      }  &lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    }  &lt;/span&gt;

&lt;span class=&quot;s1&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;查询&lt;/strong&gt;的时候slash(/)要转义,因为:this is due to regular expression support in the query parser since lucene 4.0 the slash indicates a regexp&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;install&lt;/strong&gt;:   &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;打开文件数:
increase the number of open files descriptors on the machine , 32K or even 64K&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;内存
bootstrap.mlockall=true, 用mlockall 锁住进程空间,不会被交换到硬盘， 默认最多使用1G内存,最少使用256M&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;java service wrapper&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;名词解释&lt;/strong&gt;:  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: like ‘database’, has mapping which define multiple types&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;mapping&lt;/strong&gt;: ‘schema definition’, Each index has a mapping, which defines each type within the index, plus a number of index-wide settings.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;source field&lt;/strong&gt;:the JSON document that you index will be stored in the _source field and will be returned by all get and search requests. This allows you access to the original object directly from search results, rather than requiring a second step to retrieve the object from an ID.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;id&lt;/strong&gt;:The ID of a document identifies a document. The index/type/id of a document must be unique,can get document detail through url&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;cluster&lt;/strong&gt;:A cluster consists of one or more nodes which share the same cluster name. Each cluster has a single master node which is chosen automatically by the cluster and which can be replaced if the current master node fails.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;node&lt;/strong&gt;:A node is a running instance of elasticsearch which belongs to a cluster. Multiple nodes can be started on a single server for testing purposes, but usually you should have one node per server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;shard&lt;/strong&gt;:A shard is a single Lucene instance.Elasticsearch distributes shards amongst all nodes in the cluster, and can move shards automatically from one node to another in the case of node failure, or the addition of new nodes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个cluster有1个或多个nodes，shards在所有的nodes上实现负载均衡.shards分primary和replicas&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;resources&lt;/strong&gt; &lt;br /&gt;
&lt;a href=&quot;http://blog.csdn.net/laigood/article/details/8193170&quot;&gt;生产环境使用elasticsearch遇到的一些问题以及解决方法（不断更新）&lt;/a&gt;  &lt;br /&gt;
&lt;a href=&quot;http://blog.sematext.com/2012/05/17/elasticsearch-cache-usage/&quot;&gt;ElasticSearch Cache Usage&lt;/a&gt;   &lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;/Elasticsearch-note/&quot;&gt;elasticsearch 相关笔记&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on August 13, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Operator.itemgetter in Python]]></title>
  <link rel="alternate" type="text/html" href="/operator.itemgetter-in-Python/"/>
  <id>/operator.itemgetter-in-Python</id>
  <published>2013-06-14T00:00:00+00:00</published>
  <updated>2013-06-14T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;help on operator.itemgetter:  &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;itemgetter(item, …) –&amp;gt; itemgetter object Return a callable object that fetches the given item(s) from its operand.    &lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;After, f=itemgetter(2), the call f(r) returns r[2].     &lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;After, g=itemgetter(2,5,3), the call g(r) returns (r[2], r[5], r[3]).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Threr are two tricks about this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;get dict values by keys&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemgetter&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemgetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# y == (1, 2)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;sorted dict keys by values&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;operator&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemgetter&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# y == [(&amp;#39;b&amp;#39;, 20), (&amp;#39;c&amp;#39;, 30), (&amp;#39;a&amp;#39;, 100)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iteritems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# z == [&amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;a&amp;#39;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;more about sorted()&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;the &lt;strong&gt;key&lt;/strong&gt; parameter specify a function to be called on each list element prior to making comparisons.
The value of the key parameter should be a function that takes a single argument and returns a key to use for sorting purposes.
A common pattern is to sort complex objects using some of the object’s indices as keys.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/operator.itemgetter-in-Python/&quot;&gt;Operator.itemgetter in Python&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on June 14, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Useful Python command options]]></title>
  <link rel="alternate" type="text/html" href="/Useful-Python-command-options/"/>
  <id>/Useful-Python-command-options</id>
  <published>2013-06-09T00:00:00+00:00</published>
  <updated>2013-06-09T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;h1 id=&quot;useful-python-command-options&quot;&gt;Useful Python command options&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;-c command&lt;/strong&gt;: specify the command to execute, This terminates the option list(following options are passed as arguments to the command).    &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python --version           
    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; Python 2.7.2
    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -c &lt;span class=&quot;s1&quot;&gt;&amp;#39;import sys; print sys.argv&amp;#39;&lt;/span&gt; --version
    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;-c&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;--version&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# --version is passed as argument&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;-i&lt;/strong&gt;: When a script is passed as first argument or the -c option is used, enter interactive mode after executing the script or the command. It does not read the $PYTHONSTARTUP file.This can be useful to inspect global variables or a stack trace when a script raises an exception. &lt;/p&gt;

    &lt;p&gt;for example, we hava a Python script, called test.py:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;key error here!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;KeyError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code&gt;then execute:    
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -i test.py
    &amp;gt;&amp;gt;&amp;gt; print x
    1
    &amp;gt;&amp;gt;&amp;gt; print e
    KeyError&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;key error here!&amp;#39;&lt;/span&gt;,&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;-m module_name&lt;/strong&gt;: Searches sys.path for the named module and runs the corresponding .py file as a script.
 for example:   &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    calendar:

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m calendar  &lt;span class=&quot;c&quot;&gt;# shows the calendar of current year&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m calendar y m  &lt;span class=&quot;c&quot;&gt;# shows the calendar of the month m in year y&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m calendar -h &lt;span class=&quot;c&quot;&gt;# -h option for more helps&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    zipfile:

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m zipfile
     Usage:
        zipfile.py -l zipfile.zip        &lt;span class=&quot;c&quot;&gt;# Show listing of a zipfile&lt;/span&gt;
        zipfile.py -t zipfile.zip        &lt;span class=&quot;c&quot;&gt;# Test if a zipfile is valid&lt;/span&gt;
        zipfile.py -e zipfile.zip target &lt;span class=&quot;c&quot;&gt;# Extract zipfile into target dir&lt;/span&gt;
        zipfile.py -c zipfile.zip src ... &lt;span class=&quot;c&quot;&gt;# Create zipfile from sources&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    json

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;a&amp;quot;:&amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;: &amp;quot;d&amp;quot;}&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; python -m &lt;span class=&quot;s1&quot;&gt;&amp;#39;json.tool&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;, 
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    http server: start a http server in current directory, convenient to share files.

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m &lt;span class=&quot;s1&quot;&gt;&amp;#39;SimpleHTTPServer&amp;#39;&lt;/span&gt; 1234
    Serving HTTP on 0.0.0.0 port 1234 ...

    also an CGI version:
    
    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m CGIHTTPServer 1234
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    pydoc:

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m pydoc
    pydoc - the Python documentation tool

    pydoc.py &amp;lt;name&amp;gt; ...
        Show text documentation on something.  &amp;lt;name&amp;gt; may be the name of a
        Python keyword, topic, &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;, module, or package, or a dotted
        reference to a class or &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;within a module or module in a
        package.  
        If &amp;lt;name&amp;gt; contains a &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, it is used as the path to a
        Python &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;file to document. If name is &lt;span class=&quot;s1&quot;&gt;&amp;#39;keywords&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;topics&amp;#39;&lt;/span&gt;,
        or &lt;span class=&quot;s1&quot;&gt;&amp;#39;modules&amp;#39;&lt;/span&gt;, a listing of these things is displayed.

    pydoc.py -k &amp;lt;keyword&amp;gt; &lt;span class=&quot;c&quot;&gt;#maybe slow&lt;/span&gt;
        Search &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a keyword in the synopsis lines of all available modules.

    pydoc.py -p &amp;lt;port&amp;gt;  &lt;span class=&quot;c&quot;&gt;# only for localhost&lt;/span&gt;
        Start an HTTP server on the given port on the &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;machine.

    pydoc.py -g
        Pop up a graphical interface &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;finding and serving documentation.

    pydoc.py -w &amp;lt;name&amp;gt; ...
        Write out the HTML documentation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a module to a file in the current
         directory.  If &amp;lt;name&amp;gt; contains a &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, it is treated as a filename&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;        &lt;/span&gt;it names a directory, documentation is written &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;all the contents.
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    pdb:debug python programes step by step

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m pdb scripname &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;arg&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ... 
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    doctest:

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m doctest scriptname
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    timeit:

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m timeit
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    filecmp: compare two directories:

    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m filecmp dir1 dir2
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code&gt;At last , the Zen of Python:
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python -m this
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;resources&quot;&gt;resources:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;the &lt;a href=&quot;https://pypi.python.org/pypi/e&quot;&gt;e module&lt;/a&gt;. like &lt;code&gt;python -c command&lt;/code&gt;, but more powerful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/14545001/what-tools-are-available-in-python-standard-library/14545364&quot;&gt;stackoverflow&lt;/a&gt; discussion.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.google.com/p/pyp/&quot;&gt;Pyp&lt;/a&gt; is a linux command line text manipulation tool similar to awk or sed, but which uses standard python string and list methods as well as custom functions evolved to generate fast results in an intense production environment.&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;/Useful-Python-command-options/&quot;&gt;Useful Python command options&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on June 09, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[找出文件中最长的行]]></title>
  <link rel="alternate" type="text/html" href="/Longest-line-in-file/"/>
  <id>/Longest-line-in-file</id>
  <published>2013-05-17T00:00:00+00:00</published>
  <updated>2013-05-17T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;如何找出文件中最长的行？我写了下面的awk脚本，打印出最长行的行号，内容以及行的长度:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;awk&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/bin/awk -f&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;max_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;max_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;max_nu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cur_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;length&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cur_len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max_len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;max_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cur_len&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;max_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;max_nu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NR&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max_nu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max_line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max_len&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在网上看到，还有人这么写&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;{print length,NR,$0}&amp;#39;&lt;/span&gt; a.txt &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sort -nr &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; head -1  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第二种写法的好处是更简洁，而且可以根据head的参数来调整显示的行数，但是sort处多出排序的过程，处理起来更费时，应用时看情况而定。&lt;/p&gt;

&lt;p&gt;另外,wc也可以显示最长行的长度，但是没法显示内容，可以结合其他工具来用&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;wc -L a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果在vim里面编辑文件，通常需要找出超过某长度的行，较好的方法是：在vim里面高亮长行。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;vim&quot;&gt;# 高亮每行超过&lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;个字符的部分&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; :help /\%
# &lt;span class=&quot;k&quot;&gt;v&lt;/span&gt;表示virtual column
/\%&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;column 和 virtual column 的区别见&lt;a href=&quot;http://stackoverflow.com/questions/13544640/vim-how-does-the-statusline-v-work&quot;&gt;这里&lt;/a&gt;的讨论。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/Longest-line-in-file/&quot;&gt;找出文件中最长的行&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on May 17, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Vimdiff tips]]></title>
  <link rel="alternate" type="text/html" href="/vimdiff-tips/"/>
  <id>/vimdiff-tips</id>
  <published>2013-01-18T00:00:00+00:00</published>
  <updated>2013-01-18T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;do - Get changes from other window into the current window.&lt;/p&gt;

&lt;p&gt;dp - Put the changes from current window into the other window.&lt;/p&gt;

&lt;p&gt;]c - Jump to the next change.&lt;/p&gt;

&lt;p&gt;[c - Jump to the previous change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;:diffu[pdate]&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;recalculate the diff, useful when after making several changes vim’s isn’t showing minimal changes anymore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;compare to remote file&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;vimdiff /path/to/file scp://user@host:port//path/to/file&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;将svn的diff命令改为vimdiff&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;首先，将下面的脚本保存，假设命名为 /path/to/svndiff&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 配置vimdiff程序的路径&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DIFF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;vimdiff&amp;quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# SVN diff命令会传入两个文件的参数 &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LEFT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RIGHT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 拼接成diff命令所需要的命令格式&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$DIFF&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$LEFT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$RIGH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在.subversion/config里：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;diff-cmd &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /path/to/svndiff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;/vimdiff-tips/&quot;&gt;Vimdiff tips&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on January 18, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Shell hot keys]]></title>
  <link rel="alternate" type="text/html" href="/Shell-hot-keys/"/>
  <id>/Shell-hot-keys</id>
  <published>2013-01-18T00:00:00+00:00</published>
  <updated>2013-01-18T00:00:00+00:00</updated>
  <author>
    <name>zhoufeng</name>
    <uri></uri>
    <email>fengzhou1024@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;shell 下的常用热键，在bash与zsh测试均可用，分类总结如下：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Move&lt;/strong&gt;:  &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ctrl+f forward one character&lt;/li&gt;
  &lt;li&gt;Ctrl+b back one character&lt;/li&gt;
  &lt;li&gt;Escape+f forward one word&lt;/li&gt;
  &lt;li&gt;Escape+b back one word&lt;/li&gt;
  &lt;li&gt;Ctrl+a start of line&lt;/li&gt;
  &lt;li&gt;Ctrl+e end of line&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Search&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ctrl-r does a search in the previously given commands so that you don’t have to repeat long command. &lt;/li&gt;
  &lt;li&gt;Ctrl+p previous line in history&lt;/li&gt;
  &lt;li&gt;Ctrl+n next line in history&lt;/li&gt;
  &lt;li&gt;Ctrl+g cancel (cancels search, goes back to original command)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Delete&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ctrl+d delete char to right&lt;/li&gt;
  &lt;li&gt;Ctrl+u delete to start of line from current position (works in bash, in zsh, empty the entire line)&lt;/li&gt;
  &lt;li&gt;Ctrl+k delete to end of line from current position&lt;/li&gt;
  &lt;li&gt;Ctrl+w delete the word before the cursor&lt;/li&gt;
  &lt;li&gt;Escape+d delete the word after the cursor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Modify&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ctrl+t Transpose (exchange) the character at the cursor location with the one preceding it.&lt;/li&gt;
  &lt;li&gt;Escape+t Transpose the word at the cursor location with the one preceding it.&lt;/li&gt;
  &lt;li&gt;Escape+l Convert the characters from the cursor location to the end of theword to lowercase.&lt;/li&gt;
  &lt;li&gt;Escape+u Convert the characters from the cursor location to the end of the word to upcase.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Others&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ctrl-l – clear screen &lt;/li&gt;
  &lt;li&gt;ctrl-c – kills the current command or process. &lt;/li&gt;
  &lt;li&gt;ctrl-d – kills the shell. (没有输入时)&lt;/li&gt;
  &lt;li&gt;ctrl-z – puts the currently running process in background, the process can be brought back to run state by using fg command. &lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;/Shell-hot-keys/&quot;&gt;Shell hot keys&lt;/a&gt; was originally published by zhoufeng at &lt;a href=&quot;&quot;&gt;__init__(self)&lt;/a&gt; on January 18, 2013.&lt;/p&gt;</content>
</entry>

</feed>
